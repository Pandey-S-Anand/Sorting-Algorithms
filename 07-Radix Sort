class Solution {
    public void radixSort(int[] arr, int n) {
        int digitsInMaxNumber = (int) (Math.log10(findMaxInArray(arr)) + 1);

        for (int digit = 1, powerOf10 = 1; digit <= digitsInMaxNumber; digit++, powerOf10 *= 10) {
            countingSort(arr, n, powerOf10);
        }
    }

    private int findMaxInArray(int[] arr) {
        int max = arr[0];

        for (int i = 1; i < arr.length; i++) {
            if (arr[i] > max) {
                max = arr[i];
            }
        }

        return max;
    }

    private void countingSort(int[] arr, int n, int powerOf10) {
        int[] count = new int[9 + 1]; // coz digit ranges from 0 to 9 only
        int[] result = new int[n];

        for (int i = 0; i < n; i++) {
            count[(arr[i] / powerOf10) % 10]++;
        }

        for (int i = 1; i < 10; i++) {
            count[i] += count[i - 1];
        }

        for (int i = (n - 1); i >= 0; i--) {
            result[--count[(arr[i] / powerOf10) % 10]] = arr[i];
        }

        System.arraycopy(result, 0, arr, 0, n);
    }
}
